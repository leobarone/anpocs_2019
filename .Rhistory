#   count  %>%
#   arrange(-n)
lista_votos_2019[[1]]
id_votacoes
lista_votos_2019[[1]]
id_votacoes <- tibble(
id_proposicao = lista_votos_2019 %>%
map_chr("id_proposicao"),
id_votacao = lista_votos_2019 %>%
map_dbl("id_votacao"),
tipo = lista_votos_2019 %>%
map_dbl("tipo"),
numero = lista_votos_2019 %>%
map_dbl("numero"),
ano = lista_votos_2019 %>%
map_dbl("ano"),
objeto_votacao = lista_votos_2019 %>%
map(~.x[[1]]$meta$ObjVotacao))
id_votacoes <- tibble(
id_proposicao = lista_votos_2019 %>%
map_chr("id_proposicao"),
id_votacao = lista_votos_2019 %>%
map_dbl("id_votacao"),
tipo = lista_votos_2019 %>%
map_dbl("tipo"),
numero = lista_votos_2019 %>%
map_dbl("numero"),
ano = lista_votos_2019 %>%
map_dbl("ano"),
objeto_votacao = lista_votos_2019 %>%
map(~.x[[1]]$meta$ObjVotacao))
id_votacoes <- tibble(
id_proposicao = lista_votos_2019 %>%
map_chr("id_proposicao"),
id_votacao = lista_votos_2019 %>%
map_dbl("id_votacao"),
tipo = lista_votos_2019 %>%
map_chr("tipo"),
numero = lista_votos_2019 %>%
map_dbl("numero"),
ano = lista_votos_2019 %>%
map_dbl("ano"),
objeto_votacao = lista_votos_2019 %>%
map(~.x[[1]]$meta$ObjVotacao))
id_votacoes <- tibble(
id_proposicao = lista_votos_2019 %>%
map_chr("id_proposicao"),
id_votacao = lista_votos_2019 %>%
map_dbl("id_votacao"),
tipo = lista_votos_2019 %>%
map_chr("tipo"),
numero = lista_votos_2019 %>%
map_chr("numero"),
ano = lista_votos_2019 %>%
map_dbl("ano"),
objeto_votacao = lista_votos_2019 %>%
map(~.x[[1]]$meta$ObjVotacao))
id_votacoes <- tibble(
id_proposicao = lista_votos_2019 %>%
map_chr("id_proposicao"),
id_votacao = lista_votos_2019 %>%
map_dbl("id_votacao"),
tipo = lista_votos_2019 %>%
map_chr("tipo"),
numero = lista_votos_2019 %>%
map_chr("numero"),
ano = lista_votos_2019 %>%
map_chr("ano"),
objeto_votacao = lista_votos_2019 %>%
map(~.x[[1]]$meta$ObjVotacao))
id_votacoes
id_votacoes %>%
filter(tipo == 'PEC')
id_votacoes %>%
filter(tipo == 'PEC',
numero == '34')
View(id_votacoes %>%
filter(tipo == 'PEC',
numero == '34')
)
id_votacoes %>%
filter(tipo == 'PEC',
numero == '34')
id_votacoes %>%
filter(tipo == 'PEC',
numero == '34') %>%
select(objeto_votacao)
data.frame(id_votacoes %>%
filter(tipo == 'PEC',
numero == '34') %>%
select(objeto_votacao))
votos2 %>%
filter(id_proposicao == 2197160)
votos2 %>%
filter(id_proposicao == 2197160) %>%
arrange(partido)
votos2 %>%
filter(id_proposicao == 2197160,
id_votacao == 100) %>%
arrange(partido)
votos2 %>%
filter(id_proposicao == 2197160,
id_votacao == 100) %>%
select(partido, parlamentar, voto)
votos2 %>%
filter(id_proposicao == 2197160,
id_votacao == 100) %>%
select(partido, parlamentar, voto) %>%
arrange(partido) %>%
View()
rm(list = ls())
load("votacoes_2019.RData")
bancadas %>%
group_by(bancada) %>%
summarise() %>%
rename(partido = bancada) %>%
anti_join(
obter_partidos(),
by = 'partido'
) %>% write_csv("bancadas_a_nomear.csv")
View(obter_partidos())
source("bancada_partido.R")
head(bancada_partido)
bancadas <- bancadas %>%
full_join(bancada_partido, by = 'bancada')
bancadas %>%
group_by(partido) %>%
summarise() %>%
anti_join(
obter_partidos(),
by = 'partido'
)
votos <- votos %>%
mutate(
partido = replace(partido, partido == 'Avante', 'AVANTE'),
partido = replace(partido, partido == 'Patriota', 'PATRIOTA'),
partido = replace(partido, partido == 'Podemos', 'PODE'),
partido = replace(partido, partido == 'Solidaried', 'SOLIDARIEDADE')
) %>%
left_join(bancadas,
by = c('partido', 'id_proposicao', 'id_votacao'))
votos %>%
group_by(voto) %>%
summarise()
votos %>%
group_by(voto) %>%
count()
votos %>%
group_by(orientacao) %>%
count()
d <- votos %>%
filter(votos %in% c('Sim', 'Não', 'Obstrução'),
votos %in% c('Sim', 'Não', 'Obstrução', 'Liberado'))
d <- votos %>%
filter(votos %in% c('Sim', 'Não', 'Obstrução'),
bancada %in% c('Sim', 'Não', 'Obstrução'))
head(d)
d <- votos %>%
filter(votos %in% c('Sim', 'Não', 'Obstrução'),
orientacao %in% c('Sim', 'Não', 'Obstrução'))
d
d <- votos %>%
filter(votos %in% c('Sim', 'Não', 'Obstrução'))
d
d <- votos %>%
filter(voto %in% c('Sim', 'Não', 'Obstrução'))
d
d <- votos %>%
filter(voto %in% c('Sim', 'Não', 'Obstrução'),
orientacao %in% c('Sim', 'Não', 'Obstrução'))
d
names(d)
head(d)
mutate(disciplina = if_else(voto == orientacao, 1, 0)
d <- votos %>%
filter(voto %in% c('Sim', 'Não', 'Obstrução'),
orientacao %in% c('Sim', 'Não', 'Obstrução')) %>%
mutate(disciplina = if_else(voto == orientacao, 1, 0))
head(d)
d %>%
group_by(disciplina) %>%
count
votos %>%
group_by(orientacao) %>%
count()
d <- votos %>%
filter(voto %in% c('Sim', 'Não', 'Obstrução'),
orientacao %in% c('Sim', 'Não', 'Obstrução')) %>%
mutate(disciplina = if_else(voto == orientacao, 1, 0),
id_voto = id_proposicao * 100 + id_votacao) %>%
select(id_parlamentar)
type(d$id_proposicao)
class(d$id_proposicao)
class(d$id_votacao)
d <- votos %>%
filter(voto %in% c('Sim', 'Não', 'Obstrução'),
orientacao %in% c('Sim', 'Não', 'Obstrução')) %>%
mutate(disciplina = if_else(voto == orientacao, 1, 0),
id_voto = as.numeric(id_proposicao) * 100 + id_votacao)
head(d)
d <- votos %>%
filter(voto %in% c('Sim', 'Não', 'Obstrução'),
orientacao %in% c('Sim', 'Não', 'Obstrução')) %>%
mutate(voto = if_else(voto == orientacao, 1, 0),
id_voto = as.numeric(id_proposicao) * 100 + id_votacao) %>%
select(id_voto, id_parlamentar, voto)
d
head(d)
d %>%
group_by(voto) %>%
count
save.image("votacoes_2019.RData")
d_stan <-
within(list(), {
# Dados das votacoes e parametros
y <- d$voto                       # votos
i <- d$i                          # id dos parlamentares
j <- d$j                          # id das votacoes
l <- length(y)                    # numero total de votos
n <- max(d$i)                     # numero de parlamentares
k <- max(d$j)                     # numero de votacoes
n_theta <- nrow(ids_parlamentar)  # numero de pontos
theta <- ids_parlamentar$i        # pontos
# Identificacao
n_fixo <- 2                       # numero de parlamentares fixados
id_fixo <- ids_identificacao      # id dos parlamentares fixados
posicoa_fixo <- c(0, 1)           # posicao de parlamentares fixados
# Prioris
alpha_mean <- 0                   # priori para alfa - media
alpha_sd <- 5                   # priori para alfa - desvpad
beta_mean <- 0                   # priori para beta - media
beta_sd <- 2.5                   # priori para beta - desvpad
tau_scale <- 5                   # priori para alfa - scale
zeta_mean <- 0                   # priori para zeta - media
zeta_sd <- 10                   # priori para zeta - desvpad
})
library(rvest)
library(tidyr)
library(dplyr)
library(purrr)
library(httr)
library(stringr)
library(readr)
rm(list=ls())
load('votacoes_2019.RData')
ls()
ids_votacao <- d %>%
group_by(id_votacao) %>%
summarise() %>%
mutate(j = order(id_votacao))
ids_parlamentar <- d %>%
group_by(id_parlamentar) %>%
summarise() %>%
mutate(i = order(id_parlamentar))
d <- d %>%
left_join(ids_parlamentar, by = 'id_parlamentar') %>%
left_join(ids_votacao, by = 'id_votacao')
ids_identificacao <- c(max(d$i) + 1, max(d$i) + 2)
indisciplinado <- ids_votacao %>%
mutate(voto = 0,
i = ids_identificacao[1],
id_parlamentar = 999998)
disciplinado <- ids_votacao %>%
mutate(voto = 1,
i = ids_identificacao[2],
id_parlamentar = 999999)
d <- d %>%
bind_rows(indisciplinado,
disciplinado)
d_stan <-
within(list(), {
y <- d$voto
y_idx_leg <- d$i
y_idx_vote <- d$j
Y_obs <- length(y)
N <- max(d$i)
K <- max(d$j)
N_xi_param <- nrow(ids_parlamentar)
idx_xi_param <- ids_parlamentar$i
#identificacao
N_xi_obs <- 2
idx_xi_obs <- ids_identificacao
xi_obs <- c(0, 1)
# priors
alpha_loc <- 0
alpha_scale <- 5
beta_loc <- 0
beta_scale <- 2.5
tau_scale <- 5
zeta_loc <- 0
zeta_scale <- 10
})
d_stan <-
within(list(), {
# Dados das votacoes e parametros
y <- d$voto                       # votos
i <- d$i                          # id dos parlamentares
j <- d$j                          # id das votacoes
l <- length(y)                    # numero total de votos
n <- max(d$i)                     # numero de parlamentares
k <- max(d$j)                     # numero de votacoes
n_theta <- nrow(ids_parlamentar)  # numero de pontos
theta <- ids_parlamentar$i        # pontos
# Identificacao
n_fixo <- 2                       # numero de parlamentares fixados
id_fixo <- ids_identificacao      # id dos parlamentares fixados
posicoa_fixo <- c(0, 1)           # posicao de parlamentares fixados
# Prioris
alpha_mean <- 0                   # priori para alfa - media
alpha_sd <- 5                   # priori para alfa - desvpad
beta_mean <- 0                   # priori para beta - media
beta_sd <- 2.5                   # priori para beta - desvpad
tau_scale <- 5                   # priori para alfa - scale
zeta_mean <- 0                   # priori para zeta - media
zeta_sd <- 10                   # priori para zeta - desvpad
})
d_stan
str(d_stan)
library(tidyverse)
library(pscl)
# rm(list=ls())
# xi <- c(-1, -0.5, 0.5, 1)
# alpha <- c(1, 0, -1)
# beta <- c(-0.5, 0, 0.5)
# y <- matrix(c(1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1), 3, 4)
# k <- 1
#
# list(sum(plogis(y - (alpha + beta %o% xi))),
#      sum(plogis(y - (alpha + -beta %o% -xi))),
#      sum(plogis(y - ((alpha - beta * k) + beta %o% (xi + k)))),
#      sum(plogis(y - ((alpha + (beta / k) %o% (xi * k))))))
#
data("s109", package = "pscl")
str(s109)
s109$votes
s109$codes
head(s109$legis.data)
s109_vote_data <- as.data.frame(s109$vote.data) %>%
mutate(rollcall = paste(session, number, sep = "-"),
passed = result %in% c("Confirmed", "Agreed To", "Passed"),
votestotal = yeatotal + naytotal,
yea_pct = yeatotal / (yeatotal + naytotal),
unanimous = yea_pct %in% c(0, 1),
close = yea_pct < 0.35 | yea_pct > 0.65,
lopsided = yea_pct < 0.025 | yea_pct > 0.975) %>%
filter(!unanimous) %>%
select(-unanimous) %>%
mutate(.rollcall_id = row_number())
s109_legis_data <- as.data.frame(s109$legis.data) %>%
rownames_to_column("legislator") %>%
mutate(.legis_id = row_number(),
party = fct_recode(party,
"Democratic" = "D",
"Republican" = "R",
"Independent" = "Indep"))
s109_votes <- s109$votes %>%
as.data.frame() %>%
rownames_to_column("legislator") %>%
gather(rollcall, vote, -legislator) %>%
# recode to Yea (TRUE), Nay (FALSE), or missing
mutate(yea = NA,
yea = if_else(vote %in% c(1, 2, 3), TRUE, yea),
yea = if_else(vote %in% c(4, 5, 6), FALSE, yea)
) %>%
filter(!is.na(yea)) %>%
inner_join(dplyr::select(s109_vote_data, rollcall, .rollcall_id), by = "rollcall") %>%
inner_join(dplyr::select(s109_legis_data, legislator, party, .legis_id), by = "legislator")
partyline <-
s109_votes %>%
group_by(.rollcall_id, party) %>%
summarise(yea = mean(yea)) %>%
spread(party, yea) %>%
ungroup() %>%
mutate(partyline = NA_character_,
partyline = if_else(Republican < 0.1 & Democratic > 0.9,
"Democratic", partyline),
partyline = if_else(Republican > 0.9 & Democratic < 0.1,
"Republican", partyline)) %>%
rename(pct_yea_D = Democratic, pct_yea_R = Republican) %>%
select(-Independent)
s109_vote_data <-
left_join(s109_vote_data, partyline, by = ".rollcall_id")
str(s109_vote_data)
xi_1 <-
s109_legis_data %>%
mutate(
xi = if_else(legislator == "FRIST (R TN)", 1,
if_else(legislator == "REID (D NV)", -1, NA_real_)),
init = if_else(party == "Republican", 1,
if_else(party == "Democratic", -1, 0)))
legislators_data_1 <-
within(list(), {
y <- as.integer(s109_votes$yea)
y_idx_leg <- as.integer(s109_votes$.legis_id)
y_idx_vote <- as.integer(s109_votes$.rollcall_id)
Y_obs <- length(y)
N <- max(s109_votes$.legis_id)
K <- max(s109_votes$.rollcall_id)
# priors
alpha_loc <- 0
alpha_scale <- 5
beta_loc <- 0
beta_scale <- 2.5
N_xi_obs <- sum(!is.na(xi_1$xi))
idx_xi_obs <- which(!is.na(xi_1$xi))
xi_obs <- xi_1$xi[!is.na(xi_1$xi)]
N_xi_param <- sum(is.na(xi_1$xi))
idx_xi_param <- which(is.na(xi_1$xi))
tau_scale <- 5
zeta_loc <- 0
zeta_scale <- 10
})
legislators_init_1 <- list(
list(xi_param = xi_1$init[is.na(xi_1$xi)])
)
legislators_data_1$y_idx_leg
votos %>%
group_by(orientacao) %>%
count()
votos %>%
group_by(voto) %>%
count()
# save.image("votacoes_2019.RData")
rm(list=ls())
load('votacoes_2019.RData')
d <- votos %>%
filter(voto %in% c('Sim', 'Não', 'Obstrução', 'Abstenção','-'),
orientacao %in% c('Sim', 'Não', 'Obstrução')) %>%
mutate(voto = if_else(voto == orientacao, 1, 0),
voto = replace(voto, voto %in% c('Abstenção', '-'), 1),
id_votacao = as.numeric(id_proposicao) * 100 + id_votacao,
id_parlamentar = as.numeric(id_parlamentar)) %>%
select(id_votacao, id_parlamentar, voto)
d %>%
group_by(voto) %>%
count
d %>%
group_by(voto) %>%
count
d <- votos %>%
filter(voto %in% c('Sim', 'Não', 'Obstrução', 'Abstenção','-'),
orientacao %in% c('Sim', 'Não', 'Obstrução')) %>%
mutate(voto = if_else(voto == orientacao, 1, 0),
voto = replace(voto, voto %in% c('Abstenção', '-'), 1),
id_votacao = as.numeric(id_proposicao) * 100 + id_votacao,
id_parlamentar = as.numeric(id_parlamentar)) %>%
select(id_votacao, id_parlamentar, voto)
d %>%
group_by(voto) %>%
count
# save.image("votacoes_2019.RData")
rm(list=ls())
load('votacoes_2019.RData')
d <- votos %>%
filter(voto %in% c('Sim', 'Não', 'Obstrução', 'Abstenção','-'),
orientacao %in% c('Sim', 'Não', 'Obstrução')) %>%
mutate(voto = if_else(voto == orientacao, 1, 0),
voto = replace(voto, voto %in% c('Abstenção', '-'), 1),
id_votacao = as.numeric(id_proposicao) * 100 + id_votacao,
id_parlamentar = as.numeric(id_parlamentar)) %>%
select(id_votacao, id_parlamentar, voto)
d %>%
group_by(voto) %>%
count
ids_votacao <- d %>%
group_by(id_votacao) %>%
summarise() %>%
mutate(j = order(id_votacao))
ids_parlamentar <- d %>%
group_by(id_parlamentar) %>%
summarise() %>%
mutate(i = order(id_parlamentar))
d <- d %>%
left_join(ids_parlamentar, by = 'id_parlamentar') %>%
left_join(ids_votacao, by = 'id_votacao')
ids_identificacao <- c(max(d$i) + 1, max(d$i) + 2)
indisciplinado <- ids_votacao %>%
mutate(voto = 0,
i = ids_identificacao[1],
id_parlamentar = 999998)
disciplinado <- ids_votacao %>%
mutate(voto = 1,
i = ids_identificacao[2],
id_parlamentar = 999999)
d <- d %>%
bind_rows(indisciplinado,
disciplinado)
d_stan <-
within(list(), {
# Dados das votacoes e parametros
y <- d$voto                     # votos
i <- d$i                        # id dos parlamentares
j <- d$j                        # id das votacoes
l <- length(y)                  # numero total de votos
n <- max(d$i)                   # numero de parlamentares
k <- max(d$j)                   # numero de votacoes
n_theta <- nrow(ids_parlamentar)# numero de pontos livres
id_theta <- ids_parlamentar$i   # id de pontos livres
# Identificacao
n_fixo <- 2                     # numero de pontos fixos
id_fixo <- ids_identificacao    # id dos pontos fixos
posicoa_fixo <- c(0, 1)         # posicao dos pontos fixos
# Prioris
alfa_mean <- 0                  # priori para alfa - media
alfa_sd <- 5                    # priori para alfa - desvpad
beta_mean <- 0                  # priori para beta - media
beta_sd <- 2.5                  # priori para beta - desvpad
tau_scale <- 5                  # priori para alfa - scale
theta0_mean <- 0                # priori para theta0 - media
theta0_sd <- 10                 # priori para theta0 - desvpad
})
str(d_stan)
